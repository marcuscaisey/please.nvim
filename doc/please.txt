================================================================================
                                                                   *please.nvim*

please.nvim is a plugin which allows you interact with your Please repository
from the comfort of NeoVim.

COMMANDS                                               *please-commands-intro*

Commands can be called either through the Lua or the VimL API.

Lua API~
Commands are exported by the `please` module, which can then be called like
`require("please").$command_name(<args>)`

For example, `jump_to_target` can be executed with
>
  require("please").jump_to_target()
<

VimL API~
Commands are called like `:Please $command_name <args>`

For example, `jump_to_target` can be executed with
>
  :Please jump_to_target
<

Available Commands~
jump_to_target : jump to the build target which uses the current file

See |please-commands| for more detailed descriptions of each command.

MAPPINGS                                                     *please-mappings*

please.nvim doesn't come with any mappings defined out of the box so that you
can customise how you use it. Below are some examples for each command to get
you started.

Example Mappings~
Lua:
>
  vim.keymap.set('n', '<leader>pj', require("please").jump_to_target, { silent = true })
<

VimL:
>
  nnoremap <leader>pj silent <cmd>Please jump_to_target<cr>
<


================================================================================
                                                               *please-commands*

please.jump_to_target()                              *please.jump_to_target()*
    Jumps to the location of the build target which takes the file open in the
    current buffer as input.

    The cursor will be moved to the starting position of the target's build
    rule invocation if it can be found which should be the case for all targets
    except for those with names which are generated when the BUILD file is
    executed.

    If there are multiple targets which use the open file as an input, then
    you'll be prompted for which one to jump to. This prompt uses
    |vim.ui.select()| which allows you to customise the appearance to your
    taste (see https://github.com/stevearc/dressing.nvim for example).




vim:tw=78:ts=8:ft=help:norl:
